{
    "definitions": {},
    "$schema": "http://json-schema.org/draft-07/schema#",
    "$id": "supplychains_list",
    "type": "array",
    "description": "The collection of Supplychain description.",
    "items": {
        "$id": "#/items",
        "type": "object",
        "description": "A supplychain description.",
        "required": [
            "ID",
            "operations_list"
        ],
        "properties": {
            "ID": {
                "$id": "#/items/properties/ID",
                "type": "string",
                "description": "Unique identifier.",
                "examples": [
                    "SC_1"
                ]
            },
            "label": {
                "$id": "#/items/properties/label",
                "type": "string",
                "description": "Free text for labelling (eg. name).",
                "examples": [
                    "Bassens sud APGL céréal hors tournesol"
                ]
            },
            "owner": {
                "$id": "#/items/properties/owner",
                "type": "string",
                "description": "Free text owner designation",
                "$comment": "May change to a owner ID (as a foreigner key)",
                "examples": [
                    "APGL corp."
                ]
            },
            "terminal": {
                "$id": "#/items/properties/terminal",
                "type": "string",
                "description": "Free text for terminal designation",
                "$comment": "May change to a terminal ID (as a foreigner key)",
                "examples": [
                    "Bassens"
                ]
            },
            "comments_list": {
                "$id": "#/items/properties/comment",
                "type": "array",
                "description": "Free text for comment",
                "examples": [
                    [
                        "Modifié le 15/03/19 pour ajout du nouveau TB",
                        "Remplacement des RGS 45 par des TBS"
                    ]
                ]
            },
            "tags_list": {
                "$id": "#/items/properties/tags_list",
                "type": "array",
                "description": "List of associated keywords, used for item regrouping",
                "$comment":"It is possible that for all data-model, tags replace Group and some of the Category field",
                "examples": [
                    [
                        "A jour",
                        "Quais éclairés"
                    ]
                ]
            },
            "shiftworks_ID": {
                "$id": "#/items/properties/compatibility/properties/shiftworks_ID",
                "type": "string",
                "description": "A valid shiftwork's ID.",
                "$comment": "May change, unclear consensus about ports' needs",
                "examples": [
                    "shiftworks_1"
                ]
            }
        }
            },
            "operations_list": {
                "$id": "#/items/properties/operations_list",
                "type": "array",
                "description": "List all operations.",
                "items": {
                    "$id": "#/items/properties/operations_list/items",
                    "type": "object",
                    "description": "An operation is a theoretical unit for a handling processing. The underlying key concept is to regroup uses of resources that share the same dependency for starting and ending. Note that an operation can  be created without any machine, to be use for managing others operations through operations dependencies.",
                    "required": [
                        "ID",
                        "scheduling",
                        "ressources_use"
                    ],
                    "properties": {
                        "ID": {
                            "$id": "#/items/properties/operations_list/items/properties/ID",
                            "type": "string",
                            "description": "Operation unique identifier (in this SC).",
                            "examples": [
                                "operation_1",
                                "SC_2|operation_1"
                            ]
                        },
                        "label": {
                            "$id": "#/items/properties/operations_list/items/properties/label",
                            "type": "string",
                            "description": "Free text for labelling (eg. name).",
                            "examples": [
                                "Allumage de la centrale hydraulique"
                            ]
                        },
                        "comment": {
                            "$id": "#/items/properties/operations_list/items/properties/comment",
                            "type": "string",
                            "description": "Some comment.",
                            "examples": [
                                "Premier allumage"
                            ]
                        },
                        "tags_list": {
                            "$id": "#/items/properties/operations_list/items/properties/tags_list",
                            "type": "array",
                            "description": "List of associated keywords, used for item regrouping",
                            "$comment":"It is possible that for all data-model, tags replace Group and some of the Category field",
                            "examples": [
                                [
                                    "Initialization",
                                    "Processing",
                                    "Support",
                                    "Discontinuous"
                                ]
                            ]
                        },
                        "scheduling": {
                            "$id": "#/items/properties/operations_list/items/properties/scheduling",
                            "type": "object",
                            "description": "Required information for timespan attribution.",
                            "required": [
                                "start",
                                "duration"
                            ],
                            "properties": {
                                "start": {
                                    "$id": "#/items/properties/operations_list/items/properties/scheduling/properties/start",
                                    "type": "object",
                                    "description": "How to determine operation begining.",
                                    "required": [
                                        "nature",
                                        "value"
                                    ],
                                    "properties": {
                                        "nature": {
                                            "$id": "#/items/properties/operations_list/items/properties/scheduling/properties/start/properties/nature",
                                            "type": "string",
                                            "description": "Delay: start X min after initial start possibility (X=0 for ASAP). For others than 'delay': all the steps's ID to which the condition relates (array).",
                                            "enum": [
                                                "asap",
                                                "with_first",
                                                "with_last",
                                                "after_first",
                                                "after_last"
                                            ]
                                        },
                                        "value": {
                                            "$id": "#/items/properties/operations_list/items/properties/scheduling/properties/start/properties/value",
                                            "description": "For 'delay', should be a nomber of hours. For orthers, should be an array of Steps' IDs."
                                        }
                                    },
                                    "if": {
                                        "properties": {
                                            "nature": {
                                                "const": "delay"
                                            }
                                        }
                                    },
                                    "then": {
                                        "properties": {
                                            "value": {
                                                "type": "integer",
                                                "examples": [
                                                    60,
                                                    100
                                                ]
                                            }
                                        }
                                    },
                                    "else": {
                                        "properties": {
                                            "value": {
                                                "type": "array",
                                                "examples": [
                                                    [
                                                        "step_1"
                                                    ],
                                                    [
                                                        "step_1",
                                                        "step_2"
                                                    ]
                                                ]
                                            }
                                        }
                                    }
                                },
                                "duration": {
                                    "$id": "#/items/properties/operations_list/items/properties/scheduling/properties/duration",
                                    "type": "object",
                                    "description": "How to determine duration/ending.",
                                    "$comment": "Depending of the situation, it may sometime be clearer to call it End",
                                    "required": [
                                        "nature",
                                        "value"
                                    ],
                                    "properties": {
                                        "nature": {
                                            "$id": "#/items/properties/operations_list/items/properties/scheduling/properties/duration/properties/nature",
                                            "type": "string",
                                            "description": "For 'cargo_'X, the cargo's quantity that have to be handled before ending step (express as tons or percent). For others, see 'start' description.",
                                            "enum": [
                                                "delay",
                                                "cargo_tons",
                                                "cargo_%",
                                                "before_any",
                                                "before_all",
                                                "after_any",
                                                "after_all"
                                            ],
                                            "examples": [
                                                "after_any"
                                            ]
                                        },
                                        "value": {
                                            "$id": "#/items/properties/operations_list/items/properties/scheduling/properties/duration/properties/value",
                                            "description": "delay: minutes, cargo_tons: nomber of tons, cargo_%: cargo's amount percent (<=100). For orthers, should be an array of Steps' IDs."
                                        },
                                        "if": {
                                            "properties": {
                                                "nature": {
                                                    "enum": [
                                                        "delay",
                                                        "cargo_tons",
                                                        "cargo_%"
                                                    ]
                                                }
                                            }
                                        },
                                        "then": {
                                            "properties": {
                                                "value": {
                                                    "type": "integer",
                                                    "examples": [
                                                        60,
                                                        100
                                                    ]
                                                }
                                            }
                                        },
                                        "else": {
                                            "properties": {
                                                "value": {
                                                    "type": "array",
                                                    "examples": [
                                                        [
                                                            "step_1"
                                                        ],
                                                        [
                                                            "step_1",
                                                            "step_2"
                                                        ]
                                                    ]
                                                }
                                            }
                                        }
                                    }
                                }
                            }
                        },
                        "work": {
                            "$id": "#/items/properties/operations_list/items/properties/work",
                            "type": "object",
                            "description": "An explanation about the purpose of this instance.",
                            "required": [
                                "machines",
                                "nature"
                            ],
                            "properties": {
                                "machines": {
                                    "$id": "#/items/properties/operations_list/items/properties/work/properties/machines",
                                    "type": "array",
                                    "description": "List all machines involved in this step, that is to say that start and end together (if not, should be on different steps).",
                                    "items": {
                                        "$id": "#/items/properties/operations_list/items/properties/work/properties/machines/items",
                                        "type": "string",
                                        "description": "Machine's ID.",
                                        "examples": [
                                            "machine_1"
                                        ]
                                    }
                                },
                                "nature": {
                                    "$id": "#/items/properties/operations_list/items/properties/work/properties/nature",
                                    "type": "string",
                                    "description": "parallel: the machines' work done are not interdependant (machines' throughput add up for step progress). Sequential: the machines' work done are interdependant (the machine with the minimal throughput limite the step progress).",
                                    "examples": [
                                        "parallel'"
                                    ]
                                },
                                "distance": {
                                    "$id": "#/items/properties/operations_list/items/properties/work/properties/distance",
                                    "type": "string",
                                    "$comment": "This part of the json schema is not working, expected type should depend of Nature.",
                                    "description": "'on_spot' for static machines use, number of m for moving machine (impacting throughput calculation).",
                                    "examples": [
                                        "on_spot"
                                    ]
                                }
                            }
                        }
                    }
                }
            }
        }
    }
}